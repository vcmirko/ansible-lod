---
- name: "Role - ontap/export_policy/create"
  block:
  - name: Set authentication facts
    no_log: true
    set_fact:
      auth: &auth
        hostname: "{{ auth_rest.hostname | default(omit) }}"
        username: "{{ auth_rest.username | default(omit) }}"
        password: "{{ auth_rest.password | default(omit) }}"
        key_filepath: "{{ auth_rest.key_filepath | default(omit) }}"
        cert_filepath: "{{ auth_rest.cert_filepath | default(omit) }}"
        validate_certs: "{{ auth_rest.validate_certs | default(false) }}"
        https: "{{ auth_rest.https | default(false) }}"
        use_rest: always

  # logging
  - name: Logging
    set_fact:
      l_cluster: "{{ cluster | to_nice_yaml(2) | indent(2,true) | do_log('ontap/export_policy/create','cluster',qlogname) }}"
      l_svm: "{{ svm | to_nice_yaml(2) | indent(2,true) | do_log('','svm',qlogname) }}"
      l_export_policy: "{{ export_policy | to_nice_yaml(2) | indent(2,true) | do_log('','export_policy',qlogname) }}"

    ## Create Export Policy
  - name: "Create Export Policy"          
    netapp.ontap.na_ontap_export_policy:
      state: present
      vserver: "{{ svm.name }}"
      name: "{{ export_policy.name }}"
      <<: *auth
    delegate_to: localhost

    # ============================================================================#
    # Create / Modify / Delete Export Policy Rules
    # ============================================================================#
    # If a rule contains state=absent or is_deleted_item=true then it will be deleted
    # If a rule contains is_new_item=true then it will be created
    # In all other cases the rule will be modified
    # for this logic, a custom filter is used: filter_export_policy_rules (ontap.py)
    # ============================================================================#

  - name: Create/Delete/Modify export rules
    netapp.ontap.na_ontap_export_policy_rule:
      state                      : "{{ rule.state                       | default(omit) }}"
      vserver                    : "{{ svm.name }}"
      name                       : "{{ export_policy.name }}"
      rule_index                 : "{{ rule.rule_index                  | default(omit) }}"
      client_match               : "{{ rule.client_match                | default(omit) }}"
      ro_rule                    : "{{ rule.ro_rule                     | default(omit) }}"
      rw_rule                    : "{{ rule.rw_rule                     | default(omit) }}"
      protocol                   : "{{ rule.protocol                    | default(omit) }}"
      super_user_security        : "{{ rule.super_user_security         | default(omit) }}"
      anonymous_user_id          : "{{ rule.anonymous_user_id           | default(omit) }}"
      allow_suid                 : "{{ rule.allow_suid                  | default(omit) }}"
      chown_mode                 : "{{ rule.chown_mode                  | default(omit) }}"
      ntfs_unix_security         : "{{ rule.ntfs_unix_security          | default(omit) }}"
      allow_device_creation      : "{{ rule.allow_device_creation       | default(omit) }}"
      force_delete_on_first_match: "{{ rule.force_delete_on_first_match | default(omit) }}"
      <<: *auth
    loop: "{{ export_policy.rules | default([]) | filter_export_policy_rules | list }}"
    loop_control:
      loop_var: rule
      label: "{{ (rule.rule_index | string | default(-1)) + ' -> ' + rule.client_match | default('') + ' ['+ rule.state +']' }}"
    delegate_to: localhost

  when: 
  - svm.name | default(false)
  - export_policy.name | default(false) 