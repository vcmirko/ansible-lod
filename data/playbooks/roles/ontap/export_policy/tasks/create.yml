---
- name: "Role - ontap/export_policy/create"
  block:
  - set_fact:
      auth: &auth
        hostname: "{{ auth_rest.hostname | default(omit) }}"
        username: "{{ auth_rest.username | default(omit) }}"
        password: "{{ auth_rest.password | default(omit) }}"
        key_filepath: "{{ auth_rest.key_filepath | default(omit) }}"
        cert_filepath: "{{ auth_rest.cert_filepath | default(omit) }}"
        validate_certs: "{{ auth_rest_validate_certs | default(false) }}"
        use_rest: always
    no_log: true

  # logging
  - set_fact:
      l_cluster: "{{ cluster | to_nice_yaml(2) | indent(2,true) | do_log('ontap/export_policy/create','cluster',qlogname) }}"
      l_svm: "{{ svm | to_nice_yaml(2) | indent(2,true) | do_log('','svm',qlogname) }}"
      l_export_policy: "{{ export_policy | to_nice_yaml(2) | indent(2,true) | do_log('','export_policy',qlogname) }}"

    ## Create Export Policy
  - name: "Create Export Policy"          
    netapp.ontap.na_ontap_export_policy:
      state: present
      vserver: "{{ svm.name }}"
      name: "{{ export_policy.name }}"
      <<: *auth
    delegate_to: localhost

  - name: Delete rules
    netapp.ontap.na_ontap_export_policy_rule:
      state: absent
      name: "{{ export_policy.name }}"
      rule_index: "{{ item.rule_index }}"
      vserver: "{{ svm.name }}"
      <<: *auth
    loop: "{{ export_policy.rules | default([]) | selectattr('is_deleted_item', 'defined') | selectattr('is_deleted_item','equalto',True) | selectattr('rule_index','defined') | list }}"
    loop_control:
      label: "{{ (item.rule_index | string) + ' -> ' + item.client_match  }}"
    delegate_to: localhost

  - name: Modify existing rules
    netapp.ontap.na_ontap_export_policy_rule:
      state: present
      name: "{{ export_policy.name }}"
      rule_index: "{{ item.rule_index }}"
      vserver: "{{ svm.name }}"
      client_match: "{{ item.client_match }}"
      ro_rule: "{{ item.ro_rule }}"
      rw_rule: "{{ item.rw_rule }}"
      protocol: "{{ item.protocol }}"
      super_user_security: "{{ item.super_user_security }}"
      # anonymous_user_id: 65534
      # allow_suid: true
      # ntfs_unix_security: ignore
      <<: *auth
    loop: "{{ export_policy.rules | default([]) | selectattr('is_new_item', 'undefined') | selectattr('is_deleted_item','undefined') | selectattr('rule_index','defined') | list }}"
    loop_control:
      label: "{{ (item.rule_index | string) + ' -> ' + item.client_match  }}"
    delegate_to: localhost

  - name: Add new rules
    netapp.ontap.na_ontap_export_policy_rule:
      state: present
      name: "{{ export_policy.name }}"
      vserver: "{{ svm.name }}"
      client_match: "{{ item.client_match }}"
      ro_rule: "{{ item.ro_rule }}"
      rw_rule: "{{ item.rw_rule }}"
      protocol: "{{ item.protocol }}"
      super_user_security: "{{ item.super_user_security }}"
      # anonymous_user_id: 65534
      # allow_suid: true
      # ntfs_unix_security: ignore
      <<: *auth
    loop: "{{ export_policy.rules | default([]) | selectattr('rule_index', 'undefined') | list }}"
    loop_control:
      label: "{{ item.client_match  }}"
    delegate_to: localhost

  when: 
  - svm.name | default(false)
  - export_policy.name | default(false) 