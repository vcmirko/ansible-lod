---
- name: "Role - ontap/qos_policy_group/create"
  block:
  - name: Set authentication facts
    no_log: true
    set_fact:
      auth: &auth
        hostname: "{{ auth_rest.hostname | default(omit) }}"
        username: "{{ auth_rest.username | default(omit) }}"
        password: "{{ auth_rest.password | default(omit) }}"
        key_filepath: "{{ auth_rest.key_filepath | default(omit) }}"
        cert_filepath: "{{ auth_rest.cert_filepath | default(omit) }}"
        validate_certs: "{{ auth_rest_validate_certs | default(false) }}"
        use_rest: always
    when: qos_policy_group.name | default(false)

  # logging
  - name: Logging
    set_fact:
      l_cluster:               "{{ cluster              | to_nice_yaml(2) | indent(2,true) | do_log('ontap/qos_policy_group/create','cluster',qlogname) }}"
      l_svm:                   "{{ svm                  | to_nice_yaml(2) | indent(2,true) | do_log('','svm',qlogname) }}"
      l_qos_policy_group:      "{{ qos_policy_group     | to_nice_yaml(2) | indent(2,true) | do_log('','qos_policy_group',qlogname) }}"

    ## create qos policy group
  - name : "Create QOS Policy Group [{{ qos_policy_group.name | default('None') }}]"
    netapp.ontap.na_ontap_qos_policy_group: 
      state            : present
      vserver          : "{{ svm.name }}"
      name             : "{{ qos_policy_group.name           | default(omit) }}"
      fixed_qos_options: "{{ qos_policy_group.fixed_qos_options | default(omit) }}"
      <<: *auth
    delegate_to: localhost

  when : 
  - svm.name | default(false)
  - qos_policy_group.name | default(false)