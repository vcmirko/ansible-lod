# here we assemble all the credentials we need
# we flatten them from dicts
# you can rewrite this how you see fit, to grab the credentials
# this is typically step one of the playbook
- name: "Role - maf/facts/credentials"
  block:
  # if you have credentials stored in hashi vault for example
  # use env-var VAULT_TOKEN to store the access token (*********roottoken*********)
  # and VAULT_ADDR to store the address of the vault (http://172.16.50.4:8200)
  # - name: "Get credentials from hashi vault"
  #   ansible.builtin.set_fact:
  #     aiqum: "{{ lookup('hashi_vault', 'secret=ansibleforms/data/aiqum') }}"
  #     vcenter: "{{ lookup('hashi_vault', 'secret=ansibleforms/data/vcenter') }}"
  #     ontap: "{{ lookup('hashi_vault', 'secret=ansibleforms/data/ontap') }}"
  #     ad: "{{ lookup('hashi_vault', 'secret=ansibleforms/data/ad') }}"
  #     mysql: "{{ lookup('hashi_vault', 'secret=ansibleforms/data/mysql') }}"

  - name: "Set the credentials"
    ansible.builtin.set_fact:
      aiqum_host    : "{{ aiqum.host      | default('') }}"
      aiqum_username: "{{ aiqum.user      | default('') }}"
      aiqum_password: "{{ aiqum.password  | default('') }}"

      vcenter_username: "{{ vcenter.user     | default('')}}"
      vcenter_password: "{{ vcenter.password | default('')}}"
      vcenter_host    : "{{ vcenter.host     | default('')}}"

      ontap_username: "{{ ontap.user     | default('')}}"
      ontap_password: "{{ ontap.password | default('')}}"
  
      ad_username: "{{ ad.user     | default('')}}"
      ad_password: "{{ ad.password | default('')}}"

      mysql_host    : "{{ mysql.host    | default('') }}"
      mysql_username: "{{ mysql.user    | default('') }}"
      mysql_password: "{{ mysql.password | default('') }}"
      mysql_port    : "{{ mysql.port    | default('') }}"

