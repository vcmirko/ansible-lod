---
###############################################
# Register a volume in the CMDB
###############################################
- name: "Role - generali/cmdb/register_volume"
  block:
  - name: Set authentication facts
    no_log: true
    set_fact:
      auth: &auth
        hostname: "{{ auth_rest.hostname | default(omit) }}"
        username: "{{ auth_rest.username | default(omit) }}"
        password: "{{ auth_rest.password | default(omit) }}"
        key_filepath: "{{ auth_rest.key_filepath | default(omit) }}"
        cert_filepath: "{{ auth_rest.cert_filepath | default(omit) }}"
        validate_certs: "{{ auth_rest.validate_certs | default(false) }}"
        https: "{{ auth_rest.https | default(false) }}"
        use_rest: always

  # get volume uuid using the uuid and restit
  - name: "Get volume uuid [{{ volume.name }}]"
    netapp.ontap.na_ontap_restit:
      api: /storage/volumes
      method: GET
      query:
        svm.name: "{{ svm.name }}"
        name: "{{ volume.name }}"
      <<: *auth
    delegate_to: localhost
    register: volume_info

  - name: "Reset volume uuid"
    set_fact:
      vol_uuid: 

  - name: "Register volume in CMDB, if volume exists"
    block:
    - set_fact:
        vol_uuid: "{{ volume_info.response.records[0].uuid }}"

    - debug:
        msg: "INSERT INTO {{ cmdb.db_obj }} VALUES {{ cmdb.sql_insert }}, {{ vol_uuid }});"

    # - name: CMDB SQL Query from {{ db_obj }}
    #   shell: /opt/mssql-tools/bin/sqlcmd -S {{ cmdb.db_host }} -U {{ cmdb.db_user }} -P {{ cmdb.db_pass }} -Q "INSERT INTO {{ cmdb.db_obj }} VALUES {{ cmdb.sql_insert }}, '{{ vol_uuid }}');"
    #   register: query_output

    - debug: var=query_output.stdout_lines 
    when: volume_info.response.num_records > 0

  when:
  - volume.name | default(false)
  - svm.name | default(false)
  - cmdb.db_host | default(false)
  - cmdb.sql_insert | default(false)