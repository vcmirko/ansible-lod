- name: Create svm
  type: ansible
  playbook: test_create_lod_svm.yml
  description: ""
  roles:
    - public
  categories: 
  - MAF
  tileClass: has-background-info-light
  icon: bullseye
  credentials:
    ontap: ontap_rest
    aiqum: aiqum_rest 
  fields:
    - name: cluster
      label: cluster
      group: Resource
      type: enum
      default: __auto__
      expression: fn.fnRestBasic('get','https://$(AIQUM_HOST)/api/datacenter/cluster/clusters','','aiqum_rest','[.records[] | {"name":.name,"management_ip":.management_ip} ]')
      columns:
        - name
        - management_ip
      required: true
      line: resource
      outputObject: true
      model: vars_external.cluster
    - name: svm
      type: text
      default: ""
      group: Svm
      line: svm
      label: Svm name
      required: true
      validIfNot:
        field: svm_exists
        description: The svm already exists, use a unique name
      model: vars_external.svm.name
    - name: lif_name
      label: Lif name
      type: text
      default: data
      required: true
      group: Svm
      line: svm
      model: vars_external.svm.lifs[0].name
    - name: svm_exists
      type: local
      expression: |
        (
          (svms=[],svm='')=>{ 
            return svms.includes(svm)
          }
        )($(existing_svms),'$(svm)')
    - name: existing_svms
      type: expression
      hide: true
      noOutput: true
      expression: fn.fnRestBasic('get','https://$(cluster.management_ip)/api/svm/svms','','aiqum_rest','[.records[] | .name ]')
    - name: volumes
      type: table
      label: Volumes
      group: Svm
      line: volumes
      required: true
      model: vars_external.volumes
      tableFields:
        - name: name
          type: text
          label: Name
        - name: size
          type: number
          label: Size (gb)
          default: 1
          minValue: 1
          maxValue: 100
- name: SVM DR
  type: ansible
  playbook: test_create_svm_dr_minimal_alt.yml
  description: ""
  roles:
    - public
  categories:
    - MAF
  tileClass: has-background-info-light
  icon: bullseye
  credentials:
    ontap: ontap_rest
    aiqum: aiqum_rest
  fields:
    - name: cluster_source
      label: Source cluster
      group: Resource
      type: enum
      default: __auto__
      expression: fn.fnRestBasic('get','https://$(AIQUM_HOST)/api/datacenter/cluster/clusters','','aiqum_rest','[.records[] | {"name":.name,"management_ip":.management_ip} ]')
      columns:
        - name
        - management_ip
      required: true
      line: resource
      outputObject: true
      model: vars_external.source.cluster
    - name: cluster_dest
      label: Destination cluster
      group: Resource
      type: enum
      default: __auto__
      expression: fn.fnRestBasic('get','https://$(AIQUM_HOST)/api/datacenter/cluster/clusters?name=!$(cluster_source.name)','','aiqum_rest','[.records[] | {"name":.name,"management_ip":.management_ip} ]')
      columns:
        - name
        - management_ip
      required: true
      line: resource
      outputObject: true
      model: vars_external.destination.cluster
    - name: svm
      type: text
      default: ""
      group: Svm
      line: svm
      label: Svm name
      required: true
      validIfNot:
        field: svm_exists
        description: The svm already exists, use a unique name
      model: vars_external.source.svm.name
    - name: lif_name
      label: Lif name
      type: text
      default: data
      required: true
      group: Svm
      line: svm
      model: vars_external.source.svm.lifs[0].name
    - name: svm_exists
      type: local
      expression: |
        (
          (svms=[],svm='')=>{ 
            return svms.includes(svm)
          }
        )($(existing_svms),'$(svm)')
    - name: existing_svms
      type: expression
      hide: true
      noOutput: true
      expression: fn.fnRestBasic('get','https://$(cluster_source.management_ip)/api/svm/svms','','aiqum_rest','[.records[] | .name ]')
    - name: volumes
      type: table
      label: Volumes
      group: Svm
      line: volumes
      required: true
      model: vars_external.source.volumes
      tableFields:
        - name: name
          type: text
          label: Name
        - name: size
          type: number
          label: Size (gb)
          default: 50
          minValue: 50
          maxValue: 100
- name: Create volume from template
  type: ansible
  playbook: test_create_lod_volume_template.yml
  showHelp: true
  help: |
    This form will create a volume into an svm, but using a template.  
    By using the template, you can automatically push a whole bunch of settings.
  description: ""
  roles:
    - public
  categories:
    - MAF
  tileClass: has-background-info-light
  icon: bullseye
  credentials:
    ontap: ontap_rest
    aiqum: aiqum_rest
  fields:
    - name: cluster
      label: Cluster
      type: enum
      default: __auto__
      expression: fn.fnRestBasic('get','https://$(AIQUM_HOST)/api/datacenter/cluster/clusters','','aiqum_rest','[.records[] | {"name":.name,"management_ip":.management_ip} ]')
      columns:
        - name
        - management_ip
      required: true
      line: resource
      outputObject: true
      model: vars_external.cluster
    - name: svm
      type: enum
      line: resource
      required: true
      default: __auto__
      label: Svm
      expression: fn.fnRestBasic('get','https://$(cluster.management_ip)/api/svm/svms','','aiqum_rest','[.records[] | .name ]')
      model: vars_external.svm.name
    - name: volume
      type: text
      label: Volume
      required: true
      regex:
        expression: "^vol_[a-z0-9_].*$"
        description: Volume must start with vol_ and must be alfanumeric
      model: vars_external.volume.name
      line: volume
    - name: size
      type: number
      label: Size (GB)
      required: true
      minValue: 5
      default: 5
      model: vars_external.volume.size
      line: volume
    - name: templates
      type: enum
      line: volume
      required: true
      default: __auto__
      label: Volume Templates
      expression: fn.fnReadYamlFile('/app/dist/persistent/playbooks/vars/templates.yml','.vars_templates | to_entries  | map(select(.value | has("volume"))) | map(.key)')
      model: vars_external.volume.template
- name: Delete Svm
  type: ansible
  playbook: test_delete_lod_svm.yml
  showHelp: true
  help: |
    This form will delete an svm
  description: ""
  roles:
    - public
  categories:
    - MAF
  tileClass: has-background-danger-light
  icon: trash
  credentials:
    ontap: ontap_rest
    aiqum: aiqum_rest
  fields:
    - name: cluster
      label: Cluster
      type: enum
      default: __auto__
      expression: fn.fnRestBasic('get','https://$(AIQUM_HOST)/api/datacenter/cluster/clusters','','aiqum_rest','[.records[] | {"name":.name,"management_ip":.management_ip} ]')
      columns:
        - name
        - management_ip
      required: true
      line: resource
      outputObject: true
      model: vars_external.cluster
    - name: svm
      type: enum
      line: resource
      required: true
      default: __auto__
      label: Svm
      expression: fn.fnRestBasic('get','https://$(cluster.management_ip)/api/svm/svms','','aiqum_rest','[.records[]  | .name ]')
      model: vars_external.svm.name
- name: Delete Volume
  type: ansible
  playbook: test_delete_lod_volume.yml
  showHelp: true
  help: |
    This form will delete a volume
  description: ""
  roles:
    - public
  categories:
    - MAF
  tileClass: has-background-danger-light
  icon: trash
  credentials:
    ontap: ontap_rest
    aiqum: aiqum_rest
  fields:
    - name: cluster
      label: Cluster
      type: enum
      default: __auto__
      expression: fn.fnRestBasic('get','https://$(AIQUM_HOST)/api/datacenter/cluster/clusters','','aiqum_rest','[.records[] | {"name":.name,"management_ip":.management_ip} ]')
      columns:
        - name
        - management_ip
      required: true
      line: resource
      outputObject: true
      model: vars_external.cluster
    - name: svm
      type: enum
      line: resource
      required: true
      default: __auto__
      label: Svm
      expression: fn.fnRestBasic('get','https://$(cluster.management_ip)/api/svm/svms','','aiqum_rest','[.records[]  | .name ]')
      model: vars_external.svm.name
    - name: volume
      type: enum
      line: volume
      required: true
      default: __auto__
      label: Volume
      expression: fn.fnRestBasic('get','https://$(cluster.management_ip)/api/volume/volumes?svm.name=$(svm)','','aiqum_rest','[.records[]  | .name ]')
      model: vars_external.volume.name

